{"ast":null,"code":"var _jsxFileName = \"/Users/master/Documents/Technicals/REACTJS/hint-portal/src/common/breadcrumb.jsx\";\nimport React from \"react\";\nimport { NavLink, useLocation } from \"react-router-dom\";\nimport \"./breadcrumb.scss\";\n\nconst Breadcrumb = () => {\n  const locations = useLocation().pathname.split(\"/\");\n  const breadcrumbs = locations.map((path, i) => {\n    const obj = {\n      _id: `bdcbId${i}`,\n      name: path,\n      link: \"\",\n      last: false\n    };\n\n    if (path === \"\") {\n      obj.name = \"home\";\n      obj.link = \"/\";\n    } else {\n      locations.forEach(location, count => {\n        console.log(count);\n        console.log(location);\n      });\n    }\n\n    if (i === locations.length - 1) {\n      obj.last = true;\n    }\n\n    console.log(obj);\n    return obj;\n  });\n  return /*#__PURE__*/React.createElement(\"nav\", {\n    className: \"breadcrumb-wrapper\",\n    \"aria-label\": \"breadcrumb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ol\", {\n    className: \"breadcrumb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, breadcrumbs.map(b =>\n  /*#__PURE__*/\n  // <li key={b._id} className=\"breadcrumb-item\">\n  //   <NavLink to={b.path}>{b.title}</NavLink>\n  // </li>\n  React.createElement(\"li\", {\n    key: b._id,\n    className: \"breadcrumb-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    to: b.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, b.name)))));\n};\n\nexport default Breadcrumb;","map":{"version":3,"sources":["/Users/master/Documents/Technicals/REACTJS/hint-portal/src/common/breadcrumb.jsx"],"names":["React","NavLink","useLocation","Breadcrumb","locations","pathname","split","breadcrumbs","map","path","i","obj","_id","name","link","last","forEach","location","count","console","log","length","b"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,kBAArC;AAEA,OAAO,mBAAP;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAMC,SAAS,GAAGF,WAAW,GAAGG,QAAd,CAAuBC,KAAvB,CAA6B,GAA7B,CAAlB;AACA,QAAMC,WAAW,GAAGH,SAAS,CAACI,GAAV,CAAc,CAACC,IAAD,EAAOC,CAAP,KAAa;AAC7C,UAAMC,GAAG,GAAG;AACVC,MAAAA,GAAG,EAAG,SAAQF,CAAE,EADN;AAEVG,MAAAA,IAAI,EAAEJ,IAFI;AAGVK,MAAAA,IAAI,EAAE,EAHI;AAIVC,MAAAA,IAAI,EAAE;AAJI,KAAZ;;AAMA,QAAIN,IAAI,KAAK,EAAb,EAAiB;AACfE,MAAAA,GAAG,CAACE,IAAJ,GAAW,MAAX;AACAF,MAAAA,GAAG,CAACG,IAAJ,GAAW,GAAX;AACD,KAHD,MAGO;AACLV,MAAAA,SAAS,CAACY,OAAV,CAAkBC,QAAlB,EAA6BC,KAAD,IAAW;AACrCC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACD,OAHD;AAID;;AAED,QAAIP,CAAC,KAAKN,SAAS,CAACiB,MAAV,GAAmB,CAA7B,EAAgC;AAC9BV,MAAAA,GAAG,CAACI,IAAJ,GAAW,IAAX;AACD;;AAEDI,IAAAA,OAAO,CAACC,GAAR,CAAYT,GAAZ;AAEA,WAAOA,GAAP;AACD,GAxBmB,CAApB;AA0BA,sBACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAoC,kBAAW,YAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,WAAW,CAACC,GAAZ,CAAiBc,CAAD;AAAA;AACf;AACA;AACA;AACA;AAAI,IAAA,GAAG,EAAEA,CAAC,CAACV,GAAX;AAAgB,IAAA,SAAS,EAAC,iBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAEU,CAAC,CAACR,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBQ,CAAC,CAACT,IAAxB,CADF,CAJD,CADH,CADF,CADF;AAcD,CA1CD;;AA4CA,eAAeV,UAAf","sourcesContent":["import React from \"react\";\nimport { NavLink, useLocation } from \"react-router-dom\";\n\nimport \"./breadcrumb.scss\";\n\nconst Breadcrumb = () => {\n  const locations = useLocation().pathname.split(\"/\");\n  const breadcrumbs = locations.map((path, i) => {\n    const obj = {\n      _id: `bdcbId${i}`,\n      name: path,\n      link: \"\",\n      last: false,\n    };\n    if (path === \"\") {\n      obj.name = \"home\";\n      obj.link = \"/\";\n    } else {\n      locations.forEach(location, (count) => {\n        console.log(count);\n        console.log(location);\n      });\n    }\n\n    if (i === locations.length - 1) {\n      obj.last = true;\n    }\n\n    console.log(obj);\n\n    return obj;\n  });\n\n  return (\n    <nav className=\"breadcrumb-wrapper\" aria-label=\"breadcrumb\">\n      <ol className=\"breadcrumb\">\n        {breadcrumbs.map((b) => (\n          // <li key={b._id} className=\"breadcrumb-item\">\n          //   <NavLink to={b.path}>{b.title}</NavLink>\n          // </li>\n          <li key={b._id} className=\"breadcrumb-item\">\n            <NavLink to={b.link}>{b.name}</NavLink>\n          </li>\n        ))}\n      </ol>\n    </nav>\n  );\n};\n\nexport default Breadcrumb;\n"]},"metadata":{},"sourceType":"module"}