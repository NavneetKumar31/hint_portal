{"ast":null,"code":"var _jsxFileName = \"/Users/master/Documents/Technicals/REACTJS/hint-portal/src/components/rules-extraction/ingestion/post-form.jsx\";\nimport React from \"react\";\nimport Form from \"../../../common/form\";\nimport Joi from \"joi-browser\";\nimport { getPost, savePost } from \"../../../services/postsService\";\n\nclass PostForm extends Form {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        UserId: 1,\n        Id: \"\",\n        Title: \"\",\n        Body: \"\"\n      },\n      title: \"\",\n      errors: {}\n    };\n    this.schema = {\n      Id: Joi.string(),\n      Title: Joi.string().required().label(\"Title\"),\n      UserId: Joi.number().integer().required().label(\"User Id\"),\n      Body: Joi.string().required().label(\"Message\")\n    };\n\n    this.doSubmit = () => {\n      console.log(this.state.data);\n      savePost(this.state.data);\n      this.props.history.push(\"/rules-extraction/ingestion/sharepoint\");\n    };\n  }\n\n  componentDidMount() {\n    const postId = this.props.match.params.id;\n\n    if (postId === \"new\") {\n      this.setState({\n        title: \"Add new post\"\n      });\n      return;\n    }\n\n    this.setState({\n      title: `Edit Post with id: ${postId}`\n    });\n    const post = getPost(postId);\n    if (!post) return this.props.history.replace(\"/not-found\");\n    this.setState({\n      data: this.mapToViewModel(post)\n    });\n  }\n\n  mapToViewModel(post) {\n    return {\n      Id: post.Id,\n      Title: post.Title,\n      UserId: post.UserId,\n      Body: post.Body\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }\n    }, this.state.title)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-card-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }, this.renderInput(\"Title\", \"Title\"), this.renderTextArea(\"Body\", \"Message\"), this.renderButton(\"Save\"))))));\n  }\n\n}\n\nexport default PostForm;","map":{"version":3,"sources":["/Users/master/Documents/Technicals/REACTJS/hint-portal/src/components/rules-extraction/ingestion/post-form.jsx"],"names":["React","Form","Joi","getPost","savePost","PostForm","state","data","UserId","Id","Title","Body","title","errors","schema","string","required","label","number","integer","doSubmit","console","log","props","history","push","componentDidMount","postId","match","params","id","setState","post","replace","mapToViewModel","render","handleSubmit","renderInput","renderTextArea","renderButton"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Form from \"../../../common/form\";\nimport Joi from \"joi-browser\";\nimport { getPost, savePost } from \"../../../services/postsService\";\n\nclass PostForm extends Form {\n  state = {\n    data: {\n      UserId: 1,\n      Id: \"\",\n      Title: \"\",\n      Body: \"\",\n    },\n    title: \"\",\n    errors: {},\n  };\n\n  schema = {\n    Id: Joi.string(),\n    Title: Joi.string().required().label(\"Title\"),\n    UserId: Joi.number().integer().required().label(\"User Id\"),\n    Body: Joi.string().required().label(\"Message\"),\n  };\n\n  componentDidMount() {\n    const postId = this.props.match.params.id;\n    if (postId === \"new\") {\n      this.setState({ title: \"Add new post\" });\n      return;\n    }\n    this.setState({ title: `Edit Post with id: ${postId}` });\n    const post = getPost(postId);\n    if (!post) return this.props.history.replace(\"/not-found\");\n    this.setState({ data: this.mapToViewModel(post) });\n  }\n\n  mapToViewModel(post) {\n    return {\n      Id: post.Id,\n      Title: post.Title,\n      UserId: post.UserId,\n      Body: post.Body,\n    };\n  }\n\n  doSubmit = () => {\n    console.log(this.state.data);\n    savePost(this.state.data);\n    this.props.history.push(\"/rules-extraction/ingestion/sharepoint\");\n  };\n\n  render() {\n    return (\n      <div className=\"form-container\">\n        <div className=\"form-wrapper\">\n          <div className=\"form-card\">\n            <div className=\"form-card-header\">\n              <p className=\"title\">{this.state.title}</p>\n            </div>\n            <div className=\"form-card-content\">\n              <form onSubmit={this.handleSubmit}>\n                {this.renderInput(\"Title\", \"Title\")}\n                {this.renderTextArea(\"Body\", \"Message\")}\n                {this.renderButton(\"Save\")}\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PostForm;\n"]},"metadata":{},"sourceType":"module"}