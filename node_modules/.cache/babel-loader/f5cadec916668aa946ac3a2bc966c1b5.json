{"ast":null,"code":"var _jsxFileName = \"/Users/master/Documents/Technicals/REACTJS/hint-portal/src/components/rules-extraction/ingestion/post-form.jsx\";\nimport React from \"react\";\nimport Form from \"../../../common/form\";\nimport Joi from \"joi-browser\";\nimport { getPost, savePost } from \"../../../services/postsService\";\n\nclass PostForm extends Form {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        userId: 1,\n        id: 0,\n        title: \"\",\n        body: \"\"\n      },\n      title: \"\",\n      errors: {}\n    };\n    this.schema = {\n      id: Joi.number(),\n      title: Joi.string().required().label(\"Title\"),\n      userId: Joi.number().integer().label(\"User Id\"),\n      body: Joi.string().required().label(\"Message\")\n    };\n\n    this.doSubmit = () => {\n      savePost(this.state.data);\n      this.props.history.push(\"/rules-extraction/ingestion/sharepoint\");\n    };\n  }\n\n  async componentDidMount() {\n    const postId = this.props.match.params.id;\n\n    if (postId === \"new\") {\n      this.setState({\n        title: \"Add new post\"\n      });\n      return;\n    }\n\n    this.setState({\n      title: `Edit Post with id: ${postId}`\n    });\n    const {\n      data: post\n    } = await getPost(postId);\n    if (!post) return this.props.history.replace(\"/not-found\");\n    this.setState({\n      data: this.mapToViewModel(post)\n    });\n  }\n\n  mapToViewModel(post) {\n    return {\n      id: post.id,\n      title: post.title,\n      userId: post.userId,\n      body: post.body\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }\n    }, this.state.title)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-card-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }, this.renderInput(\"title\", \"Title\"), this.renderTextArea(\"body\", \"Message\"), this.renderButton(\"Save\"))))));\n  }\n\n}\n\nexport default PostForm;","map":{"version":3,"sources":["/Users/master/Documents/Technicals/REACTJS/hint-portal/src/components/rules-extraction/ingestion/post-form.jsx"],"names":["React","Form","Joi","getPost","savePost","PostForm","state","data","userId","id","title","body","errors","schema","number","string","required","label","integer","doSubmit","props","history","push","componentDidMount","postId","match","params","setState","post","replace","mapToViewModel","render","handleSubmit","renderInput","renderTextArea","renderButton"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Form from \"../../../common/form\";\nimport Joi from \"joi-browser\";\nimport { getPost, savePost } from \"../../../services/postsService\";\n\nclass PostForm extends Form {\n  state = {\n    data: {\n      userId: 1,\n      id: 0,\n      title: \"\",\n      body: \"\",\n    },\n    title: \"\",\n    errors: {},\n  };\n\n  schema = {\n    id: Joi.number(),\n    title: Joi.string().required().label(\"Title\"),\n    userId: Joi.number().integer().label(\"User Id\"),\n    body: Joi.string().required().label(\"Message\"),\n  };\n\n  async componentDidMount() {\n    const postId = this.props.match.params.id;\n    if (postId === \"new\") {\n      this.setState({ title: \"Add new post\" });\n      return;\n    }\n\n    this.setState({ title: `Edit Post with id: ${postId}` });\n    const { data: post } = await getPost(postId);\n    if (!post) return this.props.history.replace(\"/not-found\");\n    this.setState({ data: this.mapToViewModel(post) });\n  }\n\n  mapToViewModel(post) {\n    return {\n      id: post.id,\n      title: post.title,\n      userId: post.userId,\n      body: post.body,\n    };\n  }\n\n  doSubmit = () => {\n    savePost(this.state.data);\n    this.props.history.push(\"/rules-extraction/ingestion/sharepoint\");\n  };\n\n  render() {\n    return (\n      <div className=\"form-container\">\n        <div className=\"form-wrapper\">\n          <div className=\"form-card\">\n            <div className=\"form-card-header\">\n              <p className=\"title\">{this.state.title}</p>\n            </div>\n            <div className=\"form-card-content\">\n              <form onSubmit={this.handleSubmit}>\n                {this.renderInput(\"title\", \"Title\")}\n                {this.renderTextArea(\"body\", \"Message\")}\n                {this.renderButton(\"Save\")}\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PostForm;\n"]},"metadata":{},"sourceType":"module"}