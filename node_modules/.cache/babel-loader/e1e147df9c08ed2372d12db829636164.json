{"ast":null,"code":"var _jsxFileName = \"/Users/master/Documents/Technicals/REACTJS/hint-portal/src/components/rules-extraction/ingestion/manual-upload-form.jsx\";\nimport React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"../../../common/form\";\n\nclass ManualUploadForm extends Form {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        name: \"\",\n        companyName: \"\",\n        email: \"\",\n        gender: \"\",\n        city: \"\",\n        country: \"\"\n      },\n      genders: [{\n        _id: 1,\n        name: \"Male\"\n      }, {\n        _id: 2,\n        name: \"Female\"\n      }, {\n        _id: 3,\n        name: \"Other\"\n      }],\n      title: \"\",\n      errors: {}\n    };\n    this.schema = {\n      _id: Joi.string(),\n      name: Joi.string().required().label(\"Name\"),\n      companyName: Joi.string().required().label(\"Company Name\"),\n      email: Joi.string().required().email().label(\"Email\"),\n      gender: Joi.string().required().label(\"Gender\"),\n      city: Joi.string().required().label(\"City\"),\n      country: Joi.string().required().label(\"Country\")\n    };\n\n    this.doSubmit = () => {\n      console.log(this.state.data); // saveMovie(this.state.data);\n      // this.props.history.push(\"/movies\");\n    };\n  }\n\n  componentDidMount() {\n    const documentId = this.props.match.params.id;\n\n    if (documentId === \"new\") {\n      this.setState({\n        title: \"New Movie\"\n      });\n      return;\n    } // const movie = getMovie(movieId);\n    // if (!movie) return this.props.history.replace(\"/not-found\");\n    // this.setState({ data: this.mapToViewModel(movie) });\n\n  }\n\n  mapToViewModel(movie) {\n    return {\n      _id: movie._id,\n      title: movie.title,\n      genreId: movie.genre._id,\n      numberInStock: movie.numberInStock,\n      dailyRentalRate: movie.dailyRentalRate\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }, this.state.title)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }, this.renderInput(\"name\", \"Name\"), this.renderInput(\"companyName\", \"Company Name\"), this.renderInput(\"email\", \"Email\"), this.renderInput(\"city\", \"City\"), this.renderInput(\"country\", \"Country\"), this.renderSelect(\"gender\", \"Gender\", this.state.genders), this.renderButton(\"Save\"))))));\n  }\n\n}\n\nexport default ManualUploadForm;","map":{"version":3,"sources":["/Users/master/Documents/Technicals/REACTJS/hint-portal/src/components/rules-extraction/ingestion/manual-upload-form.jsx"],"names":["React","Joi","Form","ManualUploadForm","state","data","name","companyName","email","gender","city","country","genders","_id","title","errors","schema","string","required","label","doSubmit","console","log","componentDidMount","documentId","props","match","params","id","setState","mapToViewModel","movie","genreId","genre","numberInStock","dailyRentalRate","render","handleSubmit","renderInput","renderSelect","renderButton"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Joi from \"joi-browser\";\n\nimport Form from \"../../../common/form\";\n\nclass ManualUploadForm extends Form {\n  state = {\n    data: {\n      name: \"\",\n      companyName: \"\",\n      email: \"\",\n      gender: \"\",\n      city: \"\",\n      country: \"\",\n    },\n    genders: [\n      {\n        _id: 1,\n        name: \"Male\",\n      },\n      {\n        _id: 2,\n        name: \"Female\",\n      },\n      {\n        _id: 3,\n        name: \"Other\",\n      },\n    ],\n    title: \"\",\n    errors: {},\n  };\n\n  schema = {\n    _id: Joi.string(),\n    name: Joi.string().required().label(\"Name\"),\n    companyName: Joi.string().required().label(\"Company Name\"),\n    email: Joi.string().required().email().label(\"Email\"),\n    gender: Joi.string().required().label(\"Gender\"),\n    city: Joi.string().required().label(\"City\"),\n    country: Joi.string().required().label(\"Country\"),\n  };\n\n  componentDidMount() {\n    const documentId = this.props.match.params.id;\n    if (documentId === \"new\") {\n      this.setState({ title: \"New Movie\" });\n      return;\n    }\n    // const movie = getMovie(movieId);\n    // if (!movie) return this.props.history.replace(\"/not-found\");\n    // this.setState({ data: this.mapToViewModel(movie) });\n  }\n\n  mapToViewModel(movie) {\n    return {\n      _id: movie._id,\n      title: movie.title,\n      genreId: movie.genre._id,\n      numberInStock: movie.numberInStock,\n      dailyRentalRate: movie.dailyRentalRate,\n    };\n  }\n\n  doSubmit = () => {\n    console.log(this.state.data);\n    // saveMovie(this.state.data);\n    // this.props.history.push(\"/movies\");\n  };\n\n  render() {\n    return (\n      <div className=\"form-container\">\n        <div className=\"form-wrapper\">\n          <div className=\"form-card\">\n            <div className=\"header\">\n              <h4>{this.state.title}</h4>\n            </div>\n            <div className=\"content\">\n              <form onSubmit={this.handleSubmit}>\n                {this.renderInput(\"name\", \"Name\")}\n                {this.renderInput(\"companyName\", \"Company Name\")}\n                {this.renderInput(\"email\", \"Email\")}\n                {this.renderInput(\"city\", \"City\")}\n                {this.renderInput(\"country\", \"Country\")}\n                {this.renderSelect(\"gender\", \"Gender\", this.state.genders)}\n                {this.renderButton(\"Save\")}\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ManualUploadForm;\n"]},"metadata":{},"sourceType":"module"}