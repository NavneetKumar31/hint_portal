{"ast":null,"code":"var _jsxFileName = \"/Users/master/Documents/Technicals/REACTJS/hint-portal/src/components/rules-extraction/ingestion/manual-upload-form.jsx\";\nimport React from \"react\";\nimport { Joi } from \"joi-browser\";\nimport Form from \"../../../common/form\";\n\nclass ManualUploadForm extends Form {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        name: \"\",\n        companyName: \"\",\n        email: \"\",\n        gender: \"\",\n        city: \"\",\n        country: \"\"\n      },\n      errors: {}\n    };\n\n    this.doSubmit = () => {\n      console.log(this.state.data); // saveMovie(this.state.data);\n      // this.props.history.push(\"/movies\");\n    };\n  }\n\n  // schema = {\n  //   _id: Joi.string(),\n  //   name: Joi.string().required().label(\"Name\"),\n  //   companyName: Joi.string().required().label(\"Company Name\"),\n  //   email: Joi.string().required().email().label(\"Email\"),\n  //   gender: Joi.string().required().label(\"Gender\"),\n  //   city: Joi.string().required().label(\"City\"),\n  //   country: Joi.string().required().label(\"Country\"),\n  // };\n  componentDidMount() {// const documentId = this.props.match.params.id;\n    // if (documentId === \"new\") return;\n    // const movie = getMovie(movieId);\n    // if (!movie) return this.props.history.replace(\"/not-found\");\n    // this.setState({ data: this.mapToViewModel(movie) });\n  }\n\n  mapToViewModel(movie) {\n    return {\n      _id: movie._id,\n      title: movie.title,\n      genreId: movie.genre._id,\n      numberInStock: movie.numberInStock,\n      dailyRentalRate: movie.dailyRentalRate\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }, this.renderInput(\"name\", \"Name\"), this.renderInput(\"companyName\", \"Company Name\"), this.renderButton(\"Save\"))))));\n  }\n\n}\n\nexport default ManualUploadForm;","map":{"version":3,"sources":["/Users/master/Documents/Technicals/REACTJS/hint-portal/src/components/rules-extraction/ingestion/manual-upload-form.jsx"],"names":["React","Joi","Form","ManualUploadForm","state","data","name","companyName","email","gender","city","country","errors","doSubmit","console","log","componentDidMount","mapToViewModel","movie","_id","title","genreId","genre","numberInStock","dailyRentalRate","render","handleSubmit","renderInput","renderButton"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,aAApB;AAEA,OAAOC,IAAP,MAAiB,sBAAjB;;AAEA,MAAMC,gBAAN,SAA+BD,IAA/B,CAAoC;AAAA;AAAA;AAAA,SAClCE,KADkC,GAC1B;AACNC,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAE,EADF;AAEJC,QAAAA,WAAW,EAAE,EAFT;AAGJC,QAAAA,KAAK,EAAE,EAHH;AAIJC,QAAAA,MAAM,EAAE,EAJJ;AAKJC,QAAAA,IAAI,EAAE,EALF;AAMJC,QAAAA,OAAO,EAAE;AANL,OADA;AASNC,MAAAA,MAAM,EAAE;AATF,KAD0B;;AAAA,SAyClCC,QAzCkC,GAyCvB,MAAM;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWC,IAAvB,EADe,CAEf;AACA;AACD,KA7CiC;AAAA;;AAalC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAW,EAAAA,iBAAiB,GAAG,CAClB;AACA;AACA;AACA;AACA;AACD;;AAEDC,EAAAA,cAAc,CAACC,KAAD,EAAQ;AACpB,WAAO;AACLC,MAAAA,GAAG,EAAED,KAAK,CAACC,GADN;AAELC,MAAAA,KAAK,EAAEF,KAAK,CAACE,KAFR;AAGLC,MAAAA,OAAO,EAAEH,KAAK,CAACI,KAAN,CAAYH,GAHhB;AAILI,MAAAA,aAAa,EAAEL,KAAK,CAACK,aAJhB;AAKLC,MAAAA,eAAe,EAAEN,KAAK,CAACM;AALlB,KAAP;AAOD;;AAQDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,QAAQ,EAAE,KAAKC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKC,WAAL,CAAiB,MAAjB,EAAyB,MAAzB,CADH,EAEG,KAAKA,WAAL,CAAiB,aAAjB,EAAgC,cAAhC,CAFH,EAMG,KAAKC,YAAL,CAAkB,MAAlB,CANH,CADF,CAFF,CADF,CADF,CADF;AAmBD;;AAnEiC;;AAsEpC,eAAezB,gBAAf","sourcesContent":["import React from \"react\";\nimport { Joi } from \"joi-browser\";\n\nimport Form from \"../../../common/form\";\n\nclass ManualUploadForm extends Form {\n  state = {\n    data: {\n      name: \"\",\n      companyName: \"\",\n      email: \"\",\n      gender: \"\",\n      city: \"\",\n      country: \"\",\n    },\n    errors: {},\n  };\n\n  // schema = {\n  //   _id: Joi.string(),\n  //   name: Joi.string().required().label(\"Name\"),\n  //   companyName: Joi.string().required().label(\"Company Name\"),\n  //   email: Joi.string().required().email().label(\"Email\"),\n  //   gender: Joi.string().required().label(\"Gender\"),\n  //   city: Joi.string().required().label(\"City\"),\n  //   country: Joi.string().required().label(\"Country\"),\n  // };\n\n  componentDidMount() {\n    // const documentId = this.props.match.params.id;\n    // if (documentId === \"new\") return;\n    // const movie = getMovie(movieId);\n    // if (!movie) return this.props.history.replace(\"/not-found\");\n    // this.setState({ data: this.mapToViewModel(movie) });\n  }\n\n  mapToViewModel(movie) {\n    return {\n      _id: movie._id,\n      title: movie.title,\n      genreId: movie.genre._id,\n      numberInStock: movie.numberInStock,\n      dailyRentalRate: movie.dailyRentalRate,\n    };\n  }\n\n  doSubmit = () => {\n    console.log(this.state.data);\n    // saveMovie(this.state.data);\n    // this.props.history.push(\"/movies\");\n  };\n\n  render() {\n    return (\n      <div className=\"form-container\">\n        <div className=\"form-wrapper\">\n          <div className=\"form-card\">\n            <div className=\"header\">{/* <h4>New Movie</h4> */}</div>\n            <div className=\"content\">\n              <form onSubmit={this.handleSubmit}>\n                {this.renderInput(\"name\", \"Name\")}\n                {this.renderInput(\"companyName\", \"Company Name\")}\n                {/* {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\n                {this.renderInput(\"numberInStock\", \"Number in Stock\", \"number\")}\n                {this.renderInput(\"dailyRentalRate\", \"Rate\")} */}\n                {this.renderButton(\"Save\")}\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ManualUploadForm;\n"]},"metadata":{},"sourceType":"module"}